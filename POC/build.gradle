

plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.0.0-alpha-5'

    compile group: 'io.cucumber', name: 'cucumber-java', version: '5.7.0'

    testCompile group: 'org.testng', name: 'testng', version: '7.1.0'

    testCompile group: 'io.cucumber', name: 'cucumber-testng', version: '6.0.0-RC2'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

}


task Run(type: Test) {
    useTestNG()
    options {
        useDefaultListeners = false
        jvmArgs = ['-Dcucumber.options=@/src/test/resources/features/Home.feature ' +
                           '--glue steps ' +
                           '--plugin pretty ' +
                           '--plugin json:build/cucumber/cucumber.json ' +
                           '--plugin rerun:build/cucumber/rerun.txt ' +
                           'classpath:' + featureFolders + ' ' +
                           cucumberOptions]
    }
    doLast {
        println("Run Executed!")
    }
}

task Retry(type: Test) {
    useTestNG()
    File rerunFile = new File('build/cucumber/rerun.txt')
    if (rerunFile.exists() && !rerunFile.getText().isEmpty()) {
        options {
            useDefaultListeners = false
            jvmArgs = ['-Dcucumber.options=@build/cucumber/rerun.txt ' +
                               '--glue steps ' +
                               '--plugin pretty ' +
                               '--plugin json:build/cucumber/retry/cucumber.json ' +
                               '--plugin rerun:build/cucumber/retry/rerun.txt ']
        }
    }
    doLast {
        File rerunCucumberJson = new File('build/cucumber/retry/cucumber.json')
        if (rerunCucumberJson.exists()) {
            println("Json updated")
        }
    }
}



task executeTests(type: Test) {
    useTestNG()
    options {
        jvmArgs = ['-Dcucumber.execution.strict=' + true]
        jvmArgs = ['-Dcucumber.filter.tags=' + filterTags]
    }
    testLogging.showStandardStreams = true
    scanForTestClasses = false
}

